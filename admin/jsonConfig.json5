{
	i18n: true,
	type: 'tabs',
	items: {
		_options: {
			type: 'panel',
			label: 'Options',
			items: {
				_headerAdapter: {
					type: 'header',
					text: 'Watch adapter/instances',
					size: 2,
				},
				checkAdapterInstances: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Watch adapter/instances',
				},
				_headerDevices: {
					type: 'header',
					text: 'Watch devices/services',
					size: 2,
				},
				alexa2Devices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Alexa2',
				},
				apcupsDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Apc UPS',
				},
				bleDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ble',
				},
				deconzDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Deconz',
				},
				ecovacsdeebotDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ecovacs-Deebot',
				},
				enoceanDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Enocean',
				},
				esphomeDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'EspHome',
				},
				eusecDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'euSec',
				},
				fhemTFAsensorsDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'FHEM TFA Sensors',
				},
				freeairDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'FreeAir 100',
				},
				fritzdectDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'FritzDect',
				},
				fullybrowserDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'fullyBrowser',
				},
				fullybrowserV3Devices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'fullyBrowser > v3',
				},
				fullyMQTTDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Fully-MQTT',
				},
				hamDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ham',
				},
				harmonyDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Harmony',
				},
				hmiPDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'HmiP',
				},
				hmrpcDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'HM-RPC',
				},
				homeconnectDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Home Connect',
				},
				homekitControllerDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Homekit-Controller',
				},
				hs100Devices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'hs100',
				},
				hueDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Hue',
				},
				hueExtDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Hue Extended',
				},
				innogyDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Innogy Smarthome',
				},
				jeelinkDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Jeelink',
				},
				loqedSmartLockDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Loqed Smart Lock',
				},
				lupusecDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Lupusec',
				},
				maxcubeDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Maxcube',
				},
				merossDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Meross',
				},
				mihomeDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MiHome',
				},
				mihomeVacuumDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MiHome Vacuum',
				},
				mqttClientZigbee2MqttDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MQTT Client: Zigbee2MQTT',
				},
				mqttNukiDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MQTT: Nuki Hub',
				},
				musiccastDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MusicCast',
				},
				netatmoDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Netatmo',
				},
				nukiExtDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Nuki Extended',
				},
				nutDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Nut',
				},
				pingDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ping',
				},
				proxmoxDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Proxmox',
				},
				ringDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ring',
				},
				roombaDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Roomba',
				},
				shellyDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Shelly',
				},
				smartgardenDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Smartgarden',
				},
				sonoffDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Sonoff',
				},
				sonosDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Sonos',
				},
				sureflapDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Sure Flap',
				},
				switchbotBleDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Switchbot Ble',
				},
				tadoDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tado',
				},
				tapoDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tapo',
				},
				tradfriDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tradfri',
				},
				tuyaDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tuya',
				},
				unifiDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Unifi',
				},
				viessmannDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Viessmann',
				},
				wifilightDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Wifilight',
				},
				wledDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'WLED',
				},
				xsenseDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'XSense',
				},
				yeelightDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Yeelight-2',
				},
				zigbeeDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Zigbee',
				},
				zigbee2mqttDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Zigbee2MQTT',
				},
				zwaveDevices: {
					type: 'checkbox',
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Zwave',
				},
			},
		},
		_notifications: {
			type: 'panel',
			label: 'Notifications',
			items: {
				_headerAdapterInstances: {
					type: 'header',
					text: 'Adapter & Instances Notification Settings',
					size: 2,
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				checkSendAdapterUpdateMsg: {
					newLine: true,
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Adapter update message',
					help: 'Receive a message when an update for an adapter is available',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				checkSendAdapterUpdateMsgDaily: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Overview of updatable adapter',
					help: 'Get a message with an overview of all updatable adapter',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				_sendIntervallAdapterUpdateDay: {
					type: 'panel',
					newLine: true,
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendAdapterUpdateMsgDaily',
					hideOnlyControl: false,
					items: {
						_textDays: {
							type: 'staticText',
							text: 'Choose the day(s) where you want to get the overview of updatable Adapter:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkAdapterUpdateMonday: {
							newLine: true,
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Mon',
						},
						checkAdapterUpdateTuesday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Tue',
						},
						checkAdapterUpdateWednesday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Wed',
						},
						checkAdapterUpdateThursday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Thu',
						},
						checkAdapterUpdateFriday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Fri',
						},
						checkAdapterUpdateSaturday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Sat',
						},
						checkAdapterUpdateSunday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Sun',
						},
					},
				},
				_sendIntervallAdapterUpdateMsgTime: {
					type: 'panel',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendAdapterUpdateMsgDaily',
					hideOnlyControl: false,
					items: {
						_textTime: {
							type: 'staticText',
							text: 'Choose the Time:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkSendAdapterUpdateTime: {
							newLine: true,
							type: 'text',
							help: 'Format hh:mm',
							validator: 'const timePattern = /^(?:[01]\\d|2[0-3]):[0-5]\\d$/; const value = data.checkSendAdapterUpdateTime; if(timePattern.test(value)) return true;return false;',
							validatorNoSaveOnError: true,
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
					},
				},
				trennerUpdatableAdapter: {
					newLine: true,
					type: 'divider',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				checkSendInstanceDeactivatedMsg: {
					newLine: true,
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Instance deactivated message',
					help: 'Receive a message when an instance is deactivated',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				checkSendInstanceDeactivatedDaily: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Overview of deactivated instances',
					help: 'Get a message with an overview of all deactivated instances',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				_sendIntervallInstanceDeactivatedDay: {
					type: 'panel',
					newLine: true,
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendInstanceDeactivatedDaily',
					hideOnlyControl: false,
					items: {
						_textDays: {
							type: 'staticText',
							text: 'Choose the day(s) where you want to get the overview of deactivated instances:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkInstanceDeactivatedMonday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							newLine: true,
							type: 'checkbox',
							label: 'Mon',
						},
						checkInstanceDeactivatedTuesday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Tue',
						},
						checkInstanceDeactivatedWednesday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Wed',
						},
						checkInstanceDeactivatedThursday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Thu',
						},
						checkInstanceDeactivatedFriday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Fri',
						},
						checkInstanceDeactivatedSaturday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Sat',
						},
						checkInstanceDeactivatedSunday: {
							xs: 12,
							sm: 12,
							md: 12,
							lg: 6,
							xl: 6,
							type: 'checkbox',
							label: 'Sun',
						},
					},
				},
				_sendIntervallInstanceDeactivatedMsgTime: {
					type: 'panel',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendInstanceDeactivatedDaily',
					hideOnlyControl: false,
					items: {
						_textTime: {
							type: 'staticText',
							text: 'Choose the Time:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkSendInstanceDeactivatedTime: {
							newLine: true,
							type: 'text',
							help: 'Format hh:mm',
							validator: 'const timePattern = /^(?:[01]\\d|2[0-3]):[0-5]\\d$/; const value = data.checkSendInstanceDeactivatedTime; if(timePattern.test(value)) return true;return false;',
							validatorNoSaveOnError: true,
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
					},
				},
				trennerInstanceDeactivated: {
					newLine: true,
					type: 'divider',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				checkSendInstanceFailedMsg: {
					newLine: true,
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Instance failed message',
					help: 'Receive a message when an instance failed',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				checkSendInstanceFailedDaily: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Overview of failed instances',
					help: 'Get a message with an overview of all failed instances',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				_sendIntervallFailedInstancesDay: {
					type: 'panel',
					newLine: true,
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendInstanceFailedDaily',
					hideOnlyControl: false,
					items: {
						_textDays: {
							type: 'staticText',
							text: 'Choose the day(s) where you want to get the overview of failed instances:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkFailedInstancesMonday: {
							newLine: true,
							type: 'checkbox',
							label: 'Mon',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkFailedInstancesTuesday: {
							type: 'checkbox',
							label: 'Tue',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkFailedInstancesWednesday: {
							type: 'checkbox',
							label: 'Wed',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkFailedInstancesThursday: {
							type: 'checkbox',
							label: 'Thu',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkFailedInstancesFriday: {
							type: 'checkbox',
							label: 'Fri',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkFailedInstancesSaturday: {
							type: 'checkbox',
							label: 'Sat',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkFailedInstancesSunday: {
							type: 'checkbox',
							label: 'Sun',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
					},
				},
				_sendIntervallInstanceFailedMsgTime: {
					type: 'panel',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendInstanceFailedDaily',
					hideOnlyControl: false,
					items: {
						_textTime: {
							type: 'staticText',
							text: 'Choose the Time:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkSendInstanceFailedTime: {
							newLine: true,
							type: 'text',
							help: 'Format hh:mm',
							validator: 'const timePattern = /^(?:[01]\\d|2[0-3]):[0-5]\\d$/; const value = data.checkSendInstanceFailedTime; if(timePattern.test(value)) return true;return false;',
							validatorNoSaveOnError: true,
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
					},
				},
				_headerCommon: {
					type: 'header',
					text: 'Devices/Services Notification Settings',
					size: 2,
				},
				checkSendOfflineMsg: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Offline message',
					help: 'Get message if an device is not reachable',
				},
				checkSendOfflineMsgDaily: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Overview of offline devices/services',
					help: 'Get a message with an overview all offline devices/services',
				},
				_sendIntervallOfflineDay: {
					type: 'panel',
					newLine: true,
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendOfflineMsgDaily',
					hideOnlyControl: true,
					items: {
						_textDays: {
							type: 'staticText',
							text: 'Choose the day(s) where you want to get the overview of offline devices/services:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkOfflineMonday: {
							newLine: true,
							type: 'checkbox',
							label: 'Mon',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkOfflineTuesday: {
							type: 'checkbox',
							label: 'Tue',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkOfflineWednesday: {
							type: 'checkbox',
							label: 'Wed',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkOfflineThursday: {
							type: 'checkbox',
							label: 'Thu',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkOfflineFriday: {
							type: 'checkbox',
							label: 'Fri',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkOfflineSaturday: {
							type: 'checkbox',
							label: 'Sat',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkOfflineSunday: {
							type: 'checkbox',
							label: 'Sun',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
					},
				},
				_sendIntervallOfflineTime: {
					type: 'panel',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendOfflineMsgDaily',
					hideOnlyControl: true,
					items: {
						_textTime: {
							type: 'staticText',
							text: 'Choose the Time:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkSendOfflineTime: {
							newLine: true,
							type: 'text',
							help: 'Format hh:mm',
							validator: 'const timePattern = /^(?:[01]\\d|2[0-3]):[0-5]\\d$/; const value = data.checkSendOfflineTime; if(timePattern.test(value)) return true;return false;',
							validatorNoSaveOnError: true,
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
					},
				},
				_trenner: {
					newLine: true,
					type: 'divider',
				},
				checkSendBatteryMsg: {
					newLine: true,
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Battery message',
					help: 'Get message if an device has low battery',
				},
				checkSendBatteryMsgDaily: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Overview of low battery devices',
					help: 'Get a regular message with an overview all low battery devices',
				},
				_chooseDay: {
					type: 'panel',
					newLine: true,
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendBatteryMsgDaily',
					hideOnlyControl: true,
					items: {
						_textDays: {
							type: 'staticText',
							text: 'Choose the day(s) where you want to get the message of low battery:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkMonday: {
							newLine: true,
							type: 'checkbox',
							label: 'Mon',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkTuesday: {
							type: 'checkbox',
							label: 'Tue',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkWednesday: {
							type: 'checkbox',
							label: 'Wed',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkThursday: {
							type: 'checkbox',
							label: 'Thu',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkFriday: {
							type: 'checkbox',
							label: 'Fri',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkSaturday: {
							type: 'checkbox',
							label: 'Sat',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkSunday: {
							type: 'checkbox',
							label: 'Sun',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
					},
				},
				_checkSendBatteryTime: {
					type: 'panel',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendBatteryMsgDaily',
					hideOnlyControl: true,
					items: {
						_textTime: {
							type: 'staticText',
							text: 'Choose the Time:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkSendBatteryTime: {
							newLine: true,
							type: 'text',
							help: 'Format hh:mm',
							validator: 'const timePattern = /^(?:[01]\\d|2[0-3]):[0-5]\\d$/; const value = data.checkSendBatteryTime; if(timePattern.test(value)) return true;return false;',
							validatorNoSaveOnError: true,
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
					},
				},
				_trennerZwei: {
					newLine: true,
					type: 'divider',
				},
				checkSendDeviceUpgrade: {
					newLine: true,
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Device update message',
					help: 'Receive a message when an update for an device is available',
				},
				checkSendUpgradeMsgDaily: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					label: 'Overview of devices with update',
					help: 'Get a message with an overview all devices with update',
				},
				_sendIntervallUpgradeDay: {
					type: 'panel',
					newLine: true,
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendUpgradeMsgDaily',
					hideOnlyControl: true,
					items: {
						_textDays: {
							type: 'staticText',
							text: 'Choose the day(s) where you want to get the overview of update devices:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkUpgradeMonday: {
							newLine: true,
							type: 'checkbox',
							label: 'Mon',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkUpgradeTuesday: {
							type: 'checkbox',
							label: 'Tue',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkUpgradeWednesday: {
							type: 'checkbox',
							label: 'Wed',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkUpgradeThursday: {
							type: 'checkbox',
							label: 'Thu',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkUpgradeFriday: {
							type: 'checkbox',
							label: 'Fri',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkUpgradeSaturday: {
							type: 'checkbox',
							label: 'Sat',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
						checkUpgradeSunday: {
							type: 'checkbox',
							label: 'Sun',
							xs: 12,
							sm: 6,
							md: 6,
							lg: 3,
							xl: 3,
						},
					},
				},
				_sendIntervallUpgradeTime: {
					type: 'panel',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 6,
					xl: 6,
					hidden: '!data.checkSendUpgradeMsgDaily',
					hideOnlyControl: true,
					items: {
						_textTime: {
							type: 'staticText',
							text: 'Choose the Time:',
							style: {
								fontSize: 16,
								marginTop: 20,
							},
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
						checkSendUpgradeTime: {
							newLine: true,
							type: 'text',
							help: 'Format hh:mm',
							validator: 'const timePattern = /^(?:[01]\\d|2[0-3]):[0-5]\\d$/; const value = data.checkSendUpgradeTime; if(timePattern.test(value)) return true;return false;',
							validatorNoSaveOnError: true,
							xs: 12,
							sm: 12,
							md: 12,
							lg: 12,
							xl: 12,
						},
					},
				},
				_headerOtherSettings: {
					type: 'header',
					text: 'Other Notification Settings',
					size: 2,
					hidden: '!data.checkSendBatteryMsg && !data.checkSendBatteryMsgDaily && !data.checkSendOfflineMsgDaily && !data.checkSendOfflineMsg && !data.checkSendDeviceUpgrade && !data.checkSendUpgradeMsgDaily',
				},
				showAdapterNameinMsg: {
					newLine: true,
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Add adapter name in notifcations',
					help: 'Will add the adaptername from the device',
					hidden: '!data.checkSendBatteryMsg && !data.checkSendBatteryMsgDaily && !data.checkSendOfflineMsgDaily && !data.checkSendOfflineMsg && !data.checkSendDeviceUpgrade && !data.checkSendUpgradeMsgDaily',
				},
			},
		},
		_notificationServices: {
			type: 'panel',
			label: 'Notification Service',
			items: {
				_headerMSGservice: {
					newLine: true,
					type: 'header',
					text: 'Notification Service',
					size: 2,
				},
				_msgServiceText: {
					type: 'staticText',
					text: 'Here you can choose your notification service, you can use more than one service, but you can also leave all blank, then only the datapoint lastNotification will be filled.',
					style: {
						fontSize: 16,
						marginTop: 20,
					},
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
				},
				msgService: {
					newLine: true,
					type: 'select',
					help: 'Choose your notification services',
					options: [
						{ label: 'Please choose', value: 'none' },
						{ label: 'E-Mail', value: 'email' },
						{ label: 'Jarvis', value: 'jarvis' },
						{ label: 'Lovelace', value: 'lovelace' },
						{ label: 'Matrix', value: 'matrix' },
						{ label: 'Pushover', value: 'pushover' },
						{ label: 'Signal', value: 'signal' },
						{ label: 'Synochat', value: 'synochat' },
						{ label: 'Telegram', value: 'telegram' },
						{ label: 'Whatsapp', value: 'whatsapp' },
					],
					default: 'none',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
				},
				_headerEmail: {
					newLine: true,
					type: 'header',
					text: 'Email',
					size: 2,
					hidden: "data.msgService !== 'email' && !data.instanceEmail",
					hideOnlyControl: false,
				},
				instanceEmail: {
					newLine: true,
					type: 'instance',
					adapter: 'email',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Email Instance',
					help: 'Please choose the email instance',
					hidden: "data.msgService !== 'email' && !data.instanceEmail",
					hideOnlyControl: false,
				},
				sendToEmail: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Send to (optional)',
					help: 'Choose your email address',
					hidden: "data.msgService !== 'email' && !data.instanceEmail",
					hideOnlyControl: false,
				},
				subjectEmail: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Subject (optional)',
					help: 'Choose your subject for the Email',
					hidden: "data.msgService !== 'email' && !data.instanceEmail",
					hideOnlyControl: false,
				},
				headerJarvis: {
					newLine: true,
					type: 'header',
					text: 'Jarvis Notification',
					size: 2,
					hidden: "data.msgService !== 'jarvis' && !data.instanceJarvis",
					hideOnlyControl: false,
				},
				instanceJarvis: {
					newLine: true,
					type: 'instance',
					adapter: 'jarvis',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Jarvis Instance',
					help: 'Please choose the jarvis instance',
					hidden: "data.msgService !== 'jarvis' && !data.instanceJarvis",
					hideOnlyControl: false,
				},
				titleJarvis: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Title (optional)',
					help: 'Choose your title for Pushmessage',
					hidden: "data.msgService !== 'jarvis' && !data.instanceJarvis",
					hideOnlyControl: false,
				},
				headerLovelace: {
					newLine: true,
					type: 'header',
					text: 'Lovelace Notification',
					size: 2,
					hidden: "data.msgService !== 'lovelace' && !data.instanceLovelace",
					hideOnlyControl: false,
				},
				instanceLovelace: {
					newLine: true,
					type: 'instance',
					adapter: 'lovelace',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Lovelace Instance',
					help: 'Please choose the lovelace instance',
					hidden: "data.msgService !== 'lovelace' && !data.instanceLovelace",
					hideOnlyControl: false,
				},
				titleLovelace: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Title (optional)',
					help: 'Choose your title for Pushmessage',
					hidden: "data.msgService !== 'lovelace' && !data.instanceLovelace",
					hideOnlyControl: false,
				},
				headerMatrix: {
					newLine: true,
					type: 'header',
					text: 'Matrix',
					size: 2,
					hidden: "data.msgService !== 'matrix' && !data.instanceMatrix",
					hideOnlyControl: false,
				},
				instanceMatrix: {
					newLine: true,
					type: 'instance',
					adapter: 'matrix-org',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Matrix Instance',
					help: 'Please choose the matrix instance',
					hidden: "data.msgService !== 'matrix' && !data.instanceMatrix",
					hideOnlyControl: false,
				},
				titleMatrix: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Title (optional)',
					help: 'Choose your title for message',
					hidden: "data.msgService !== 'matrix' && !data.instanceMatrix",
					hideOnlyControl: false,
				},
				_headerPushover: {
					newLine: true,
					type: 'header',
					text: 'Pushover',
					size: 2,
					hidden: "data.msgService !== 'pushover' && !data.instancePushover",
					hideOnlyControl: false,
				},
				instancePushover: {
					newLine: true,
					type: 'instance',
					adapter: 'pushover',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Pushover Instance',
					help: 'Please choose the pushover instance',
					hidden: "data.msgService !== 'pushover' && !data.instancePushover",
					hideOnlyControl: false,
				},
				userPushover: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'User/Group key (optional)',
					help: 'Choose your User/Group key for Pushmessage',
					hidden: "data.msgService !== 'pushover' && !data.instancePushover",
					hideOnlyControl: false,
				},
				devicePushover: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Device-ID (optional)',
					help: 'Choose your device',
					hidden: "data.msgService !== 'pushover' && !data.instancePushover",
					hideOnlyControl: false,
				},
				prioPushover: {
					type: 'select',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					help: 'Choose the priority',
					options: [
						{ label: 'Normal', value: '' },
						{ label: 'High Priority', value: 1 },
						{ label: 'Silent', value: -1 },
						{ label: 'With confirmation', value: 2 },
					],
					hidden: "data.msgService !== 'pushover' && !data.instancePushover",
					hideOnlyControl: false,
				},
				titlePushover: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Title (optional)',
					help: 'Choose your title for Pushmessage',
					hidden: "data.msgService !== 'pushover' && !data.instancePushover",
					hideOnlyControl: false,
				},
				headerSignal: {
					newLine: true,
					type: 'header',
					text: 'Signal',
					size: 2,
					hidden: "data.msgService !== 'signal' && !data.instanceSignal",
					hideOnlyControl: false,
				},
				instanceSignal: {
					newLine: true,
					type: 'instance',
					adapter: 'signal-cmb',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Signal Instance',
					help: 'Please choose the Signal instance',
					hidden: "data.msgService !== 'signal' && !data.instanceSignal",
					hideOnlyControl: false,
				},
				phonSignal: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Recipient (optional)',
					help: 'Choose your recipient',
					hidden: "data.msgService !== 'signal' && !data.instanceSignal",
					hideOnlyControl: false,
				},
				headerSynochat: {
					newLine: true,
					type: 'header',
					text: 'Synochat',
					size: 2,
					hidden: "data.msgService !== 'synochat' && !data.instanceSynochat",
					hideOnlyControl: false,
				},
				instanceSynochat: {
					newLine: true,
					type: 'instance',
					adapter: 'synochat',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Synochat Instance',
					help: 'Please choose the Synochat instance',
					hidden: "data.msgService !== 'synochat' && !data.instanceSynochat",
					hideOnlyControl: false,
				},
				channelSynochat: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Channel',
					help: 'Enter the channelname for Synochat',
					hidden: "data.msgService !== 'synochat' && !data.instanceSynochat",
					hideOnlyControl: false,
				},
				headerTelegram: {
					newLine: true,
					type: 'header',
					text: 'Telegram',
					size: 2,
					hidden: "data.msgService !== 'telegram' && !data.instanceTelegram",
					hideOnlyControl: false,
				},
				instanceTelegram: {
					newLine: true,
					type: 'instance',
					adapter: 'telegram',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Telegram Instance',
					help: 'Please choose the telegram instance',
					hidden: "data.msgService !== 'telegram' && !data.instanceTelegram",
					hideOnlyControl: false,
				},
				deviceTelegram: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Device-ID (optional)',
					help: 'Choose your device',
					hidden: "data.msgService !== 'telegram' && !data.instanceTelegram",
					hideOnlyControl: false,
				},
				chatIdTelegram: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Chat-ID (optional)',
					help: 'Choose your Chat-ID',
					hidden: "data.msgService !== 'telegram' && !data.instanceTelegram",
					hideOnlyControl: false,
				},
				headerWhatsapp: {
					newLine: true,
					type: 'header',
					text: 'Whatsapp',
					size: 2,
					hidden: "data.msgService !== 'whatsapp' && !data.instanceWhatsapp",
					hideOnlyControl: false,
				},
				instanceWhatsapp: {
					newLine: true,
					type: 'instance',
					adapter: 'whatsapp-cmb',
					all: false,
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Whatsapp Instance',
					help: 'Please choose the Whatsapp instance',
					hidden: "data.msgService !== 'whatsapp' && !data.instanceWhatsapp",
					hideOnlyControl: false,
				},
				phoneWhatapp: {
					type: 'text',
					xs: 12,
					sm: 12,
					md: 4,
					lg: 4,
					xl: 4,
					label: 'Recipient (optional)',
					help: 'Choose your recipient',
					hidden: "data.msgService !== 'whatsapp' && !data.instanceWhatsapp",
					hideOnlyControl: false,
				},
			},
		},
		_blacklist: {
			type: 'panel',
			label: 'Blacklist',
			items: {
				_headerBlacklistInstances: {
					newLine: true,
					type: 'header',
					text: 'Instances Blacklist',
					size: 2,
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				tableBlacklistInstances: {
					type: 'table',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
					confirm: {
						condition: '!_alive',
						title: 'Attention!',
						text: 'This selection is only possible with a running instance!',
						ok: 'Got it!',
						cancel: 'cancel',
						type: 'warning',
					},
					items: [
						{
							type: 'selectSendTo',
							title: 'Choose which instances should be excluded',
							attr: 'instances',
							filter: false,
							sort: false,
							jsonData: '{"instanceID":"${globalData.instanceID}","adapter":"${globalData.adapter}"}',
							command: 'instancesList',
							width: '60%',
						},
						{
							type: 'checkbox',
							title: 'Ignor in notifications',
							attr: 'checkIgnorNotify',
							width: '15%',
						},
						{
							type: 'checkbox',
							title: 'Ignore in lists',
							attr: 'checkIgnorLists',
							width: '10%',
						},
					],
				},
				_headerDevices: {
					newLine: true,
					type: 'header',
					text: 'Devices/Services Blacklist',
					size: 2,
				},
				tableBlacklist: {
					type: 'table',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					confirm: {
						condition: '!_alive',
						title: 'Attention!',
						text: 'This selection is only possible with a running instance!',
						ok: 'Got it!',
						cancel: 'cancel',
						type: 'warning',
					},
					items: [
						{
							type: 'selectSendTo',
							title: 'Choose which devices/services should be excluded',
							attr: 'devices',
							filter: false,
							sort: false,
							jsonData: '{"deviceName":"${globalData.deviceName}","adapter":"${globalData.adapter}","path":"${globalData.path}"}',
							command: 'devicesList',
							width: '60%',
						},
						{
							type: 'checkbox',
							title: 'Ignor in notifications',
							attr: 'checkIgnorNotify',
							width: '15%',
						},
						{
							type: 'checkbox',
							title: 'Ignore in main lists',
							attr: 'checkIgnorLists',
							width: '10%',
						},
						{
							type: 'checkbox',
							title: 'Ignore in lists per adapter',
							attr: 'checkIgnorAdapterLists',
							width: '10%',
						},
					],
				},
			},
		},
		_otherSettings: {
			type: 'panel',
			label: 'Other Settings',
			items: {
				_headerOtherSettings: {
					type: 'header',
					text: 'Other Settings',
					size: 2,
				},
				trueState: {
					newLine: true,
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 6,
					lg: 4,
					xl: 4,
					label: 'True State',
					help: 'Use the true value of the signal strength, or it is converted to %',
				},
				listOnlyBattery: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 6,
					lg: 4,
					xl: 4,
					label: 'List only devices with batteries',
					help: 'Choose if only devices with batteries should be listed or all devices',
				},
				minWarnBatterie: {
					type: 'number',
					min: -1,
					max: 100,
					xs: 12,
					sm: 12,
					md: 12,
					lg: 4,
					xl: 4,
					label: 'From what % battery is considered low',
					help: 'in percent',
				},
				createOwnFolder: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 6,
					lg: 4,
					xl: 4,
					label: 'Create own folders for each adapter',
					help: 'If you like to have for every Adapter an own folder with own data',
				},
				createHtmlList: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 6,
					lg: 4,
					xl: 4,
					label: 'Create additionally HTML lists',
					help: 'Create the lists also in HTML',
				},
				showLastSignal: {
					type: 'checkbox',
					xs: 12,
					sm: 12,
					md: 6,
					lg: 4,
					xl: 4,
					label: 'Display last signal strength',
					help: 'Display the last signal strength value when the device is offline',
				},
				_updateInterval: {
					type: 'header',
					text: 'Update-Interval',
					size: 2,
				},
				_textUpdateInterval: {
					type: 'staticText',
					text: 'Here you can define the update interval of the datapoints/lists. For performance reasons, it is not recommended to select a poll value that is too low. Lower than two seconds is not selectable.',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					style: {
						fontSize: 16,
						marginBottom: 10,
					},
				},
				updateinterval: {
					type: 'number',
					min: 2,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Update-Interval',
					help: 'in seconds',
					hideOnlyControl: false,
				},
				_headerLanguage: {
					type: 'header',
					text: 'Language',
					size: 2,
				},
				_textLanguage: {
					type: 'staticText',
					text: 'Here you can select the language for the tables and messages',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					style: {
						fontSize: 16,
						marginBottom: 10,
					},
				},
				userSelectedLanguage: {
					type: 'language',
					system: false,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Language',
				},
			},
		},
		_expertSettings: {
			type: 'panel',
			label: 'Expert Settings',
			items: {
				_headerTimeInstances: {
					type: 'header',
					text: 'Deactivation and Error Time for Instances',
					size: 2,
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				_textTimeInstances: {
					type: 'staticText',
					text: 'Define the global instance deactivation and error time. The default value is 20 seconds.',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
					style: {
						fontSize: 16,
						marginBottom: 10,
					},
				},
				offlineTimeInstances: {
					type: 'number',
					min: 20,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Global deactivation time',
					help: 'in seconds',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				errorTimeInstances: {
					type: 'number',
					min: 20,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Global error time',
					help: 'in seconds',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				_divider: {
					newLine: true,
					type: 'divider',
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
				},
				_textTableTimeInstances: {
					type: 'staticText',
					text: 'If necessary, set the deactivation and error time of each instance for yourself here. This setting overwrites the global setting for the selected instance.',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
					style: {
						fontSize: 16,
						marginBottom: 10,
					},
				},
				tableTimeInstance: {
					type: 'table',
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					hidden: '!data.checkAdapterInstances',
					hideOnlyControl: false,
					confirm: {
						condition: '!_alive',
						title: 'Attention!',
						text: 'This selection is only possible with a running instance!',
						ok: 'Got it!',
						cancel: 'cancel',
						type: 'warning',
					},
					items: [
						{
							type: 'selectSendTo',
							title: 'Choose which instances should have a longer downtime',
							attr: 'instancesTime',
							filter: false,
							sort: false,
							jsonData: '{"instanceID":"${globalData.instanceID}","adapter":"${globalData.adapter}"}',
							command: 'instancesListTime',
							width: '60%',
						},
						{
							type: 'number',
							min: 20,
							max: 1000000,
							default: 20,
							title: 'Deactivation time in seconds',
							attr: 'deactivationTime',
							width: '15%',
						},
						{
							type: 'number',
							min: 20,
							max: 1000000,
							default: 20,
							title: 'Error time in seconds',
							attr: 'errorTime',
							width: '15%',
						},
					],
				},
				_headerOfflineTime: {
					type: 'header',
					text: 'Offline Time for devices/services',
					size: 2,
				},
				_textOfflineTime: {
					type: 'staticText',
					text: "Here you can define the offline times of each adapter. If you want to use the data points of the devices/services (online, available, reachable etc.) directly to determine the status, enter ' 0 '.",
					xs: 12,
					sm: 12,
					md: 12,
					lg: 12,
					xl: 12,
					style: {
						fontSize: 16,
						marginBottom: 10,
					},
				},
				alexa2MaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Alexa2',
					help: 'in minutes',
					hidden: '!data.alexa2Devices',
					hideOnlyControl: false,
				},
				apcupsMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Apc UPS',
					help: 'in minutes',
					hidden: '!data.apcupsDevices',
					hideOnlyControl: false,
				},
				bleMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ble',
					help: 'in minutes',
					hidden: '!data.bleDevices',
					hideOnlyControl: false,
				},
				deconzMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Deconz',
					help: 'in minutes',
					hidden: '!data.deconzDevices',
					hideOnlyControl: false,
				},
				ecovacsdeebotMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ecovacs-Deebot',
					help: 'in minutes',
					hidden: '!data.ecovacsdeebotDevices',
					hideOnlyControl: false,
				},
				enoceanMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Enocean',
					help: 'in minutes',
					hidden: '!data.enoceanDevices',
					hideOnlyControl: false,
				},
				esphomeMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'EspHome',
					help: 'in minutes',
					hidden: '!data.esphomeDevices',
					hideOnlyControl: false,
				},
				eusecMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'euSec',
					help: 'in minutes',
					hidden: '!data.eusecDevices',
					hideOnlyControl: false,
				},
				fhemTFAsensorsMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'FHEM TFA sensores',
					help: 'in minutes',
					hidden: '!data.fhemTFAsensorsDevices',
					hideOnlyControl: false,
				},
				freeairMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'FreeAir 100',
					help: 'in minutes',
					hidden: '!data.freeairDevices',
					hideOnlyControl: false,
				},
				fritzdectMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'FritzDect',
					help: 'in minutes',
					hidden: '!data.fritzdectDevices',
					hideOnlyControl: false,
				},
				fullybrowserMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'fullyBrowser',
					help: 'in minutes',
					hidden: '!data.fullybrowserDevices',
					hideOnlyControl: false,
				},
				fullybrowserV3MaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'fullyBrowser > v3',
					help: 'in minutes',
					hidden: '!data.fullybrowserV3Devices',
					hideOnlyControl: false,
				},
				fullyMQTTMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Fully-MQTT',
					help: 'in minutes',
					hidden: '!data.fullyMQTTDevices',
					hideOnlyControl: false,
				},
				hamMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ham',
					help: 'in minutes',
					hidden: '!data.hamDevices',
					hideOnlyControl: false,
				},
				harmonyMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Harmony',
					help: 'in minutes',
					hidden: '!data.harmonyDevices',
					hideOnlyControl: false,
				},
				hmiPMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'HmiP',
					help: 'in minutes',
					hidden: '!data.hmiPDevices',
					hideOnlyControl: false,
				},
				hmrpcMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'HM-RPC',
					help: 'in minutes',
					hidden: '!data.hmrpcDevices',
					hideOnlyControl: false,
				},
				homeconnectMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Home Connect',
					help: 'in minutes',
					hidden: '!data.homeconnectDevices',
					hideOnlyControl: false,
				},
				homekitControllerMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Homekit-Controller',
					help: 'in minutes',
					hidden: '!data.homekitControllerDevices',
					hideOnlyControl: false,
				},
				hs100MaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'hs100',
					help: 'in minutes',
					hidden: '!data.hs100Devices',
					hideOnlyControl: false,
				},
				hueMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Hue',
					help: 'in minutes',
					hidden: '!data.hueDevices',
					hideOnlyControl: false,
				},
				hueextMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'HueExtended',
					help: 'in minutes',
					hidden: '!data.hueExtDevices',
					hideOnlyControl: false,
				},
				innogyMaxMinutes: {
					type: 'number',
					min: 0,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Innogy Smarthome',
					help: 'in minutes',
					hidden: '!data.innogyDevices',
					hideOnlyControl: false,
				},
				jeelinkMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Jeelink',
					help: 'in minutes',
					hidden: '!data.jeelinkDevices',
					hideOnlyControl: false,
				},
				loqedSmartLockMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Loqed Smart Lock',
					help: 'in minutes',
					hidden: '!data.loqedSmartLockDevices',
					hideOnlyControl: false,
				},
				lupusecMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Lupusec',
					help: 'in minutes',
					hidden: '!data.lupusecDevices',
					hideOnlyControl: false,
				},
				maxcubeMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Maxcube',
					help: 'in minutes',
					hidden: '!data.maxcubeDevices',
					hideOnlyControl: false,
				},
				merossMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Meross',
					help: 'in minutes',
					hidden: '!data.merossDevices',
					hideOnlyControl: false,
				},
				mihomeMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MiHome',
					help: 'in minutes',
					hidden: '!data.mihomeDevices',
					hideOnlyControl: false,
				},
				mihomeGWMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MiHome Gateway',
					help: 'in minutes',
					hidden: '!data.mihomeDevices',
					hideOnlyControl: false,
				},
				mihomeVacuumMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Mihome Vacuum',
					help: 'in minutes',
					hidden: '!data.mihomeVacuumDevices',
					hideOnlyControl: false,
				},
				mqttClientZigbee2MqttMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MQTT Client: Zigbee2MQTT',
					help: 'in minutes',
					hidden: '!data.mqttClientZigbee2MqttDevices',
					hideOnlyControl: false,
				},
				mqttNukiMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MQTT: Nuki Hub',
					help: 'in minutes',
					hidden: '!data.mqttNukiDevices',
					hideOnlyControl: false,
				},
				musiccastMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'MusicCast',
					help: 'in minutes',
					hidden: '!data.musiccastDevices',
					hideOnlyControl: false,
				},
				netatmoMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Netatmo',
					help: 'in minutes',
					hidden: '!data.netatmoDevices',
					hideOnlyControl: false,
				},
				nukiextendMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Nuki Extended',
					help: 'in minutes',
					hidden: '!data.nukiExtDevices',
					hideOnlyControl: false,
				},
				nutMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Nut',
					help: 'in minutes',
					hidden: '!data.nutDevices',
					hideOnlyControl: false,
				},
				pingMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ping',
					help: 'in minutes',
					hidden: '!data.pingDevices',
					hideOnlyControl: false,
				},
				proxmoxMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Proxmox',
					help: 'in minutes',
					hidden: '!data.proxmoxDevices',
					hideOnlyControl: false,
				},
				ringMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Ring',
					help: 'in minutes',
					hidden: '!data.ringDevices',
					hideOnlyControl: false,
				},
				roombaMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Roomba',
					help: 'in minutes',
					hidden: '!data.roombaDevices',
					hideOnlyControl: false,
				},
				shellyMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Shelly',
					help: 'in minutes',
					hidden: '!data.shellyDevices',
					hideOnlyControl: false,
				},
				smartgardenMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Smartgarden',
					help: 'in minutes',
					hidden: '!data.smartgardenDevices',
					hideOnlyControl: false,
				},
				sonoffMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Sonoff',
					help: 'in minutes',
					hidden: '!data.sonoffDevices',
					hideOnlyControl: false,
				},
				sonosMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Sonos',
					help: 'in minutes',
					hidden: '!data.sonosDevices',
					hideOnlyControl: false,
				},
				sureflapMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Sure Flap',
					help: 'in minutes',
					hidden: '!data.sureflapDevices',
					hideOnlyControl: false,
				},
				switchbotMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Switchbot Ble',
					help: 'in minutes',
					hidden: '!data.switchbotBleDevices',
					hideOnlyControl: false,
				},
				tadoMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tado',
					help: 'in minutes',
					hidden: '!data.tadoDevices',
					hideOnlyControl: false,
				},
				tapoMaxMinutes: {
					type: 'number',
					min: 1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tapo',
					help: 'in minutes',
					hidden: '!data.tapoDevices',
					hideOnlyControl: false,
				},
				tradfriMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tradfri',
					help: 'in minutes',
					hidden: '!data.tradfriDevices',
					hideOnlyControl: false,
				},
				tuyaMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Tuya',
					help: 'in minutes',
					hidden: '!data.tuyaDevices',
					hideOnlyControl: false,
				},
				unifiMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Unifi',
					help: 'in minutes',
					hidden: '!data.unifiDevices',
					hideOnlyControl: false,
				},
				viessmannMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Viessmann',
					help: 'in minutes',
					hidden: '!data.viessmannDevices',
					hideOnlyControl: false,
				},
				wifilightMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Wifilight',
					help: 'in minutes',
					hidden: '!data.wifilightDevices',
					hideOnlyControl: false,
				},
				wledMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'WLED',
					help: 'in minutes',
					hidden: '!data.wledDevices',
					hideOnlyControl: false,
				},
				xsenseMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'XSense',
					help: 'in minutes',
					hidden: '!data.xsenseDevices',
					hideOnlyControl: false,
				},
				yeelightMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Yeelight-2',
					help: 'in minutes',
					hidden: '!data.yeelightDevices',
					hideOnlyControl: false,
				},
				zigbeeMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Zigbee',
					help: 'in minutes',
					hidden: '!data.zigbeeDevices',
					hideOnlyControl: false,
				},
				zigbee2mqttMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Zigbee2MQTT',
					help: 'in minutes',
					hidden: '!data.zigbee2mqttDevices',
					hideOnlyControl: false,
				},
				zwaveMaxMinutes: {
					type: 'number',
					min: -1,
					max: 100000,
					xs: 12,
					sm: 6,
					md: 6,
					lg: 3,
					xl: 3,
					label: 'Zwave',
					help: 'in minutes',
					hidden: '!data.zwaveDevices',
					hideOnlyControl: false,
				},
			},
		},
	},
}
